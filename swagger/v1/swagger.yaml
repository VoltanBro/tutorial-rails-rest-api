---
swagger: '2.0'
info:
  title: API V1
  version: v1
paths:
  "/auth/login":
    post:
      summary: login authentication
      tags:
      - Authentication
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
              required: true
              description: Email for Login
              example: hello@changwoo.org
            password:
              type: string
              required: true
              description: Password for Login
              example: hello1234
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
  "/categories":
    get:
      summary: list categories
      tags:
      - Category
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
    post:
      summary: create category
      tags:
      - Category
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            category:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
      produces:
      - application/json
      responses:
        '201':
          description: Successful
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
  "/categories/{id}":
    get:
      summary: show category
      tags:
      - Category
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      summary: update category
      tags:
      - Category
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            category:
              type: object
              properties:
                body:
                  type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '403':
          description: Forbidden Unathorized
    delete:
      summary: delete category
      tags:
      - Category
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: Successful
        '403':
          description: Forbidden Unathorized
  "/comments":
    get:
      summary: list comments
      tags:
      - Comment
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: post_id
        in: query
        type: integer
        default: '1'
        description: Post Id
      - name: page
        in: query
        type: integer
        default: '1'
        description: Page number
      - name: per
        in: query
        type: integer
        description: Per page number
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
    post:
      summary: create comment
      tags:
      - Comment
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            comment:
              type: object
              properties:
                body:
                  type: string
                post_id:
                  type: string
      produces:
      - application/json
      responses:
        '201':
          description: Successful
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
  "/comments/{id}":
    get:
      summary: show comment
      tags:
      - Comment
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      summary: update comment
      tags:
      - Comment
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            comment:
              type: object
              properties:
                body:
                  type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '403':
          description: Forbidden Unathorized
    delete:
      summary: delete comment
      tags:
      - Comment
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: Successful
        '403':
          description: Forbidden Unathorized
  "/posts":
    get:
      summary: list posts
      tags:
      - Post
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: category_id
        in: query
        type: integer
        default: '1'
        description: Category Id
      - name: page
        in: query
        type: integer
        default: '1'
        description: Page number
      - name: per
        in: query
        type: integer
        description: Per page number
      - name: search
        in: query
        type: string
        description: Search Keyword
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
        '404':
          description: Not Found Category
    post:
      summary: create post
      tags:
      - Post
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            post:
              type: object
              properties:
                body:
                  type: string
                category_id:
                  type: integer
      produces:
      - application/json
      responses:
        '201':
          description: Successful
        '401':
          description: Unauthorized
        '404':
          description: Not Found Category
        '422':
          description: Unprocessable Entity
  "/posts/{id}":
    get:
      summary: show post
      tags:
      - Post
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
        '404':
          description: Not Found Category
    put:
      summary: update post
      tags:
      - Post
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            post:
              type: object
              properties:
                body:
                  type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized
        '404':
          description: Not Found Category
    delete:
      summary: delete post
      tags:
      - Post
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: Successful
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized
        '404':
          description: Not Found Category
  "/users":
    get:
      summary: list users
      tags:
      - User
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: page
        in: query
        type: string
        required: true
        default: '1'
        description: Page number
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
    post:
      summary: create user
      tags:
      - User
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
      produces:
      - application/json
      responses:
        '201':
          description: User created
        '422':
          description: Unprocessable Entity
  "/users/{_username}":
    get:
      summary: show user
      tags:
      - User
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: _username
        in: path
        description: username
        default: helloworld
        schema:
          type: string
          properties:
            _username:
              type: string
          required:
          - _username
        required: true
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized
        '404':
          description: Not Found
    put:
      summary: update user
      tags:
      - User
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: _username
        in: path
        description: username
        default: helloworld
        schema:
          type: string
          properties:
            _username:
              type: string
          required:
          - _username
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized
    delete:
      summary: delete user
      tags:
      - User
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: _username
        in: path
        description: username
        default: helloworld
        schema:
          type: string
          properties:
            _username:
              type: string
          required:
          - _username
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: Successful
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized
securityDefinitions:
  Bearer:
    description: Generate JWT
    type: apiKey
    name: Authorization
    in: header
