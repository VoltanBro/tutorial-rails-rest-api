---
swagger: '2.0'
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/login":
    post:
      summary: login authentication
      tags:
      - Authentication
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/auth_param"
      responses:
        '200':
          description: Ok
          schema:
            "$ref": "#/definitions/auth"
        '401':
          description: Unauthorized
  "/api/v1/categories":
    get:
      summary: list categories
      tags:
      - Category
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: page
        in: query
        type: integer
        default: '1'
        description: Page number
      - name: per
        in: query
        type: integer
        description: Per page number
      - name: post_page
        in: query
        type: integer
        description: Page number for Post
      - name: post_per
        in: query
        type: integer
        description: Per page number For Post
      produces:
      - application/json
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/categories"
        '401':
          description: Unauthorized
    post:
      summary: create category
      tags:
      - Category
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            category:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
      produces:
      - application/json
      responses:
        '201':
          description: Successful
          schema:
            "$ref": "#/definitions/category"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
  "/api/v1/categories/{id}":
    get:
      summary: show category
      tags:
      - Category
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: post_page
        in: query
        type: integer
        description: Page number for Post
      - name: post_per
        in: query
        type: integer
        description: Per page number For Post
      produces:
      - application/json
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/category"
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      summary: update category
      tags:
      - Category
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            category:
              type: object
              properties:
                body:
                  type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/category"
        '403':
          description: Forbidden Unathorized
    delete:
      summary: delete category
      tags:
      - Category
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: Successful
        '403':
          description: Forbidden Unathorized
  "/api/v1/comments":
    get:
      summary: list comments
      tags:
      - Comment
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: post_id
        in: query
        type: integer
        default: '1'
        description: Post Id
      - name: page
        in: query
        type: integer
        default: '1'
        description: Page number
      - name: per
        in: query
        type: integer
        description: Per page number
      produces:
      - application/json
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/comments"
        '401':
          description: Unauthorized
        '404':
          description: Not Found Post
    post:
      summary: create comment
      tags:
      - Comment
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            comment:
              type: object
              properties:
                body:
                  type: string
                post_id:
                  type: string
      produces:
      - application/json
      responses:
        '201':
          description: Successful
          schema:
            "$ref": "#/definitions/comment"
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
  "/api/v1/comments/{id}":
    get:
      summary: show comment
      tags:
      - Comment
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/comment"
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      summary: update comment
      tags:
      - Comment
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            comment:
              type: object
              properties:
                body:
                  type: string
      produces:
      - application/json
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/comment"
        '403':
          description: Forbidden Unathorized
    delete:
      summary: delete comment
      tags:
      - Comment
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: Successful
        '403':
          description: Forbidden Unathorized
  "/api/v1/posts":
    get:
      summary: list posts
      tags:
      - Post
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: category_id
        in: query
        type: integer
        default: '1'
        description: Category Id
      - name: page
        in: query
        type: integer
        default: '1'
        description: Page number
      - name: per
        in: query
        type: integer
        description: Per page number
      - name: comment_page
        in: query
        type: integer
        description: Page number for Comment
      - name: comment_per
        in: query
        type: integer
        description: Per page number For Comment
      - name: search
        in: query
        type: string
        description: Search Keyword
      produces:
      - application/json
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/posts"
        '401':
          description: Unauthorized
        '404':
          description: Not Found Category
    post:
      summary: create post
      tags:
      - Post
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/post_param"
      produces:
      - application/json
      responses:
        '201':
          description: Successful
          schema:
            "$ref": "#/definitions/post"
        '401':
          description: Unauthorized
        '404':
          description: Not Found Category
        '422':
          description: Unprocessable Entity
  "/api/v1/posts/{id}":
    get:
      summary: show post
      tags:
      - Post
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: comment_page
        in: query
        type: integer
        description: Page number for Comment
      - name: comment_per
        in: query
        type: integer
        description: Per page number For Comment
      produces:
      - application/json
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/post"
        '401':
          description: Unauthorized
        '404':
          description: Not Found Category
    put:
      summary: update post
      tags:
      - Post
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/post_param"
      produces:
      - application/json
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/post"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized
        '404':
          description: Not Found Category
    delete:
      summary: delete post
      tags:
      - Post
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: Successful
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized
        '404':
          description: Not Found Category
  "/api/v1/posts/":
    post:
      summary: create multipart form
      tags:
      - Post - multipart/form-data
      security:
      - Bearer: []
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: post[title]
        in: formData
        type: string
        required: true
      - name: post[body]
        in: formData
        type: string
        required: true
      - name: post[category_id]
        in: formData
        type: integer
        required: true
      - name: post[files]
        in: formData
        type: file
      responses:
        '201':
          description: Successful
          schema:
            "$ref": "#/definitions/posts"
  "/api/v1/posts/{id}/":
    put:
      summary: update multipart form
      tags:
      - Post - multipart/form-data
      security:
      - Bearer: []
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: post[title]
        in: formData
        type: string
        required: true
      - name: post[body]
        in: formData
        type: string
        required: true
      - name: post[files]
        in: formData
        type: file
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/post"
  "/api/v1/posts/{id}/attached/{attached_id}":
    delete:
      summary: delete post attached file
      tags:
      - Post - multipart/form-data
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: attached_id
        in: path
        type: string
        description: attached_id
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: Successful
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - User
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: page
        in: query
        type: string
        required: true
        default: '1'
        description: Page number
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized - Required admin role
    post:
      summary: create user
      tags:
      - User
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
      produces:
      - application/json
      responses:
        '201':
          description: User created
        '422':
          description: Unprocessable Entity
  "/api/v1/users/{_username}":
    get:
      summary: show user
      tags:
      - User
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: _username
        in: path
        description: username
        default: helloworld
        schema:
          type: string
          properties:
            _username:
              type: string
          required:
          - _username
        required: true
      produces:
      - application/json
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized
        '404':
          description: Not Found
    put:
      summary: update user
      tags:
      - User - multipart/form-data
      security:
      - Bearer: []
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: _username
        in: path
        description: username
        default: helloworld
        schema:
          type: string
          properties:
            _username:
              type: string
          required:
          - _username
        required: true
      - name: user[name]
        in: formData
        type: string
        required: true
      - name: user[username]
        in: formData
        type: string
        required: true
      - name: user[email]
        in: formData
        type: string
        required: true
      - name: user[password]
        in: formData
        type: string
        required: true
      - name: user[password_confirmation]
        in: formData
        type: string
        required: true
      - name: user[avatar]
        in: formData
        type: file
      produces:
      - application/json
      responses:
        '200':
          description: Successful
          schema:
            "$ref": "#/definitions/user"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized
    delete:
      summary: delete user
      tags:
      - User
      security:
      - Bearer: []
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        description: JWT token for Authorization
      - name: _username
        in: path
        description: username
        default: helloworld
        schema:
          type: string
          properties:
            _username:
              type: string
          required:
          - _username
        required: true
      produces:
      - application/json
      responses:
        '204':
          description: Successful
        '401':
          description: Unauthorized
        '403':
          description: Forbidden Unathorized
  "/api/v1/users/":
    post:
      summary: create user
      tags:
      - User - multipart/form-data
      consumes:
      - multipart/form-data
      parameters:
      - name: user[name]
        in: formData
        type: string
        required: true
      - name: user[username]
        in: formData
        type: string
        required: true
      - name: user[email]
        in: formData
        type: string
        required: true
      - name: user[password]
        in: formData
        type: string
        required: true
      - name: user[password_confirmation]
        in: formData
        type: string
        required: true
      - name: user[avatar]
        in: formData
        type: file
      produces:
      - application/json
      responses:
        '201':
          description: User created
          schema:
            "$ref": "#/definitions/user"
securityDefinitions:
  Bearer:
    description: Generate JWT
    type: apiKey
    name: Authorization
    in: header
definitions:
  auth_param:
    type: object
    properties:
      email:
        type: string
        required: true
        description: Email for Login
        example: hello@changwoo.org
      password:
        type: string
        required: true
        description: Password for Login
        example: hello1234
  user_param:
    type: object
    properties:
      name:
        type: string
      username:
        type: string
      email:
        type: string
      password:
        type: string
      password_confirmation:
        type: string
  category_param:
    type: object
    properties:
      title:
        type: string
      body:
        type: string
  post_param:
    type: object
    properties:
      title:
        type: string
      body:
        type: string
      category_id:
        type: integer
  comment_param:
    type: object
    properties:
      body:
        type: string
      post_id:
        type: integer
  auth:
    type: object
    properties:
      token:
        type: string
      exp:
        type: string
      username:
        type: string
      email:
        type: string
  user:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      username:
        type: string
      email:
        type: string
      avatar:
        type: string
  category:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      body:
        type: string
      posts:
        type: array
        items:
          "$ref": "#/definitions/post"
      posts_pagination:
        "$ref": "#/definitions/pagination"
  post:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      body:
        type: string
      user:
        "$ref": "#/definitions/user"
      category:
        "$ref": "#/definitions/category"
      files:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
      comments:
        type: array
        items:
          "$ref": "#/definitions/comment"
      comments_pagination:
        "$ref": "#/definitions/pagination"
    required:
    - id
    - title
    - body
  comment:
    type: object
    properties:
      id:
        type: integer
      body:
        type: string
      user:
        "$ref": "#/definitions/user"
    required:
    - id
    - body
  pagination:
    type: object
    x-nullable: true
    properties:
      current_page:
        type: integer
        x-nullable: true
      next_page:
        type: integer
        x-nullable: true
      prev_page:
        type: integer
        x-nullable: true
      total_pages:
        type: integer
        x-nullable: true
      total_count:
        type: integer
        x-nullable: true
  categories:
    type: object
    properties:
      categories:
        type: array
        items:
          "$ref": "#/definitions/category"
      categories_pagination:
        "$ref": "#/definitions/pagination"
  posts:
    type: object
    properties:
      posts:
        type: array
        items:
          "$ref": "#/definitions/post"
      posts_pagination:
        "$ref": "#/definitions/pagination"
  comments:
    type: object
    properties:
      comments:
        type: array
        items:
          "$ref": "#/definitions/comment"
      comments_pagination:
        "$ref": "#/definitions/pagination"
  users:
    type: array
    items:
      "$ref": "#/definitions/user"
